import React, {Component} from 'react';
import {connect} from 'react-redux';
import * as R from 'ramda';
import {Link} from 'react-router-dom';

import {fetchPhoneById, addPhoneToBasket} from 'redux/actions';
import {getPhoneById} from "selectors/selectors";
import BasketCart from 'components/basket-cart';

class Phone extends Component {

    componentDidMount() {
        this.props.fetchPhoneById(this.props.match.params.id);
    }

    renderFields() {
        const { phone } = this.props;

        //  const columnField = R.compose(a, b, c)(phone) => what we want to got [['key', 'value']];
        const columnField = R.compose(
            R.toPairs,
            R.pick([
                'cpu',
                'camera',
                'size',
                'weight',
                'display',
                'battery',
                'memory'
            ])
        )(phone);

        return columnField.map(([key, value]) => (
            <div className="column" key={key}>
                <div className="ab-details-title">
                    <p>{key} -</p>
                </div>
                <div className="ab-details-info">
                    {value}
                </div>
            </div>
        ))
    };

    renderContent() {
        const { phone } = this.props;
        return(
            <div className="card">
                <div className="row">
                    <div className="col-md-6">
                        <img
                            className="card-img"
                            src={phone.image}
                            alt={phone.name}
                        />
                    </div>
                    <div className="col-md-6">
                        {this.renderFields()}
                    </div>
                </div>
                <div className="card-body">
                    <h5 className="pull-right">${phone.price}</h5>
                    <h5>{phone.name}</h5>
                    <p>{phone.description}</p>
                </div>
            </div>
        )
    };

    renderSideBar() {
        const {phone, addPhoneToBasket} = this.props;
        return(
            <div>
                <p className="lead">Quick Shop</p>
                <BasketCart/>
                <div className="form-group">
                    <h3>{phone.name}</h3>
                    <h4>${phone.price}</h4>
                </div>
                <Link to="/" className="btn btn-info btn-block">Back to Store</Link>
                <button
                    className="btn btn-success btn-block"
                    onClick={() => addPhoneToBasket(phone.id)}
                >
                    Add to Cart
                </button>
            </div>
        )
    }


    render() {
        const { phone } = this.props;
        return (
            <div className="view-container">
                <div className="container">
                    <div className="row">
                        <div className="col-md-9">
                            {phone && this.renderContent()}
                        </div>
                        <div className="col-md-3">
                            {phone && this.renderSideBar()}
                        </div>
                    </div>
                </div>

            </div>
        )
    }
}

const mapStateToProps = state => ({
    phone: getPhoneById(state, state.phonePage.id)
});

const mapDispatchToProps = {
    fetchPhoneById,
    addPhoneToBasket
};

export default connect(mapStateToProps, mapDispatchToProps)(Phone);
